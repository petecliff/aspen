# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'
  releaseBranchName: 'main'
  azureServiceConnectorName: 'Dev Subscription (e58a1fd6-05ea-4fac-9e3d-e0d75f25519c)'
  azureAppServiceDevName: 'aspen-app-service-dev'
  azureAppServiceTestName: 'aspen-app-service-test'
  dotnetSdkVersion: '6.x'
  dotnetFramework: 'net6.0'
  targetRuntime: 'linux-x64'

stages:
  - stage: 'Build'
    displayName: 'Bella the builder'
    jobs:
    - job: 'Build'
      displayName: 'Build and publish'
      pool:
        vmImage: 'ubuntu-20.04'
      steps:
      - task: UseDotNet@2
        displayName: 'Use .NET SDK $(dotnetSdkVersion)'
        inputs:
          version: '$(dotnetSdkVersion)'
      - script: dotnet build --configuration $(buildConfiguration)
        displayName: 'Build .NET $(dotnetSdkVersion) application'
      - task: DotNetCoreCli@2
        inputs:
          command: publish
          publishWebProjects: True
          arguments: '--configuration $(buildConfiguration) --framework $(dotnetFramework) --runtime $(targetRuntime) --self-contained --output $(Build.ArtifactStagingDirectory)'
          zipAfterPublish: True
      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: '$(Build.ArtifactStagingDirectory)'
          artifactName: 'AspenWebApp'

  - stage: 'DeployDev'
    displayName: 'Deploy - Dev'
    condition: |
    and
    (
      succeeded(),
      eq(variables['Build.SourceBranchName'], variables['releaseBranchName'])
    )
    jobs:
    - deployment: 'DeployJobDev'
      pool:
        vmImage: 'ubuntu-20.04'
      environment: dev
      strategy:
        runOnce:
          deploy:
            steps:
            - download: current
              artifact: 'AspenWebApp'
            - task: AzureWebApp@1
              displayName: 'Deploy to Azure App Service'
              inputs:
                azureSubscription: $(azureServiceConnectorName)
                appName: $(azureAppServiceDevName)
                package: '$(Pipeline.Workspace)/AspenWebApp/$(buildConfiguration)/*.zip'








